name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          - name: "App"
            platform: "linux/amd64"
            os: "ubuntu-latest"
          - name: "App"
            platform: "windows/amd64"
            os: "windows-latest"
          - name: "App"
            platform: "darwin/universal"
            os: "macos-latest"

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: "1.20"

      - name: Get platform name
        id: platform
        run: echo "name=$(echo '${{ matrix.build.platform }}' | sed 's/\//-/g')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.name }}-${{ steps.platform.outputs.name }}-${{ github.ref_name }}
          path: |
            build/bin/*
            build/build/*
          retention-days: 30
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
